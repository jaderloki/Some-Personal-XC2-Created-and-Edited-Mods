class AHarderWar_Grenades_ChosenPack extends X2Item config(AHWChosenPack_Configuration);

//***** Grenade Variables *****
//*** Config var declarations

var config WeaponDamageValue OCEANFOG_GRENADE_BASEDAMAGE;
var config int OCEANFOG_GRENADE_SOUNDRANGE;
var config int OCEANFOG_GRENADE_ENVIRONMENTDAMAGE;
var config int OCEANFOG_GRENADE_CLIPSIZE;
var config int OCEANFOG_GRENADE_RANGE;
var config int OCEANFOG_GRENADE_RADIUS;
var config int OCEANFOG_NUM_TURNS;
var config float OCEANFOG_SIGHTRADIUS_POSTMULTAMOUNT;

var config WeaponDamageValue TRAUMA_GRENADE_BASEDAMAGE;
var config int TRAUMA_GRENADE_SOUNDRANGE;
var config int TRAUMA_GRENADE_ENVIRONMENTDAMAGE;
var config int TRAUMA_GRENADE_CLIPSIZE;
var config int TRAUMA_GRENADE_RANGE;
var config int TRAUMA_GRENADE_RADIUS;
var config int TRAUMA_GRENADE_DISORIENT_APPLY_CHANCE_PERCENT;
var config int TRAUMA_GRENADE_DAZE_TURNS;

static function array<X2DataTemplate> CreateTemplates()
{
	local array<X2DataTemplate> Grenades;

	Grenades.AddItem(CreateOceanFogGrenade());
	Grenades.AddItem(CreateHunterTraumaGrenade());

	return Grenades;
}

static function X2DataTemplate CreateOceanFogGrenade()
{
	local X2GrenadeTemplate				Template;
	local X2Effect_ApplyWeaponDamage	WeaponDamageEffect;

	`CREATE_X2TEMPLATE(class'X2GrenadeTemplate', Template, 'OceanFogGrenade');

	Template.strImage = "img:///UILibrary_StrategyImages.InventoryIcons.Inv_AlienGrenade";
	Template.EquipSound = "StrategyUI_Grenade_Equip";

	Template.Abilities.AddItem('ThrowGrenade');
	Template.bFriendlyFire = false;
	Template.bFriendlyFireWarning = false;

	WeaponDamageEffect = new class'X2Effect_ApplyWeaponDamage';
	WeaponDamageEffect.bExplosiveDamage = true;
	Template.ThrownGrenadeEffects.AddItem(WeaponDamageEffect);

	Template.iRange = default.OCEANFOG_GRENADE_RANGE;
	Template.iRadius = default.OCEANFOG_GRENADE_RADIUS;
	Template.BaseDamage = default.OCEANFOG_GRENADE_BASEDAMAGE;
	Template.iEnvironmentDamage = default.OCEANFOG_GRENADE_ENVIRONMENTDAMAGE;
	Template.iClipSize = default.OCEANFOG_GRENADE_CLIPSIZE;
	Template.iSoundRange = default.OCEANFOG_GRENADE_SOUNDRANGE;

	Template.ThrownGrenadeEffects.AddItem(class'X2Effect_Blind'.static.CreateBlindEffect(default.OCEANFOG_NUM_TURNS, default.OCEANFOG_SIGHTRADIUS_POSTMULTAMOUNT));
	Template.ThrownGrenadeEffects.AddItem(class'X2StatusEffects'.static.CreatePoisonedStatusEffect());

//BEGIN AUTOGENERATED CODE: Template Overrides 'MountainMistGrenade'
	Template.GameArchetype = "WP_Grenade_MountainMist.WP_Grenade_MountainMist";
//END AUTOGENERATED CODE: Template Overrides 'MountainMistGrenade'

	Template.CanBeBuilt = false;

	return Template;
}

static function X2DataTemplate CreateHunterTraumaGrenade()
{
	local X2GrenadeTemplate Template;
	local X2Effect_ApplyWeaponDamage WeaponDamageEffect;
	local X2Effect_Knockback KnockbackEffect;
	local X2Effect_Dazed DazeEffect;

	`CREATE_X2TEMPLATE(class'X2GrenadeTemplate', Template, 'HunterTraumaGrenade');

	Template.strImage = "img:///UILibrary_StrategyImages.X2InventoryIcons..Inv_Concussion_Grenade";
	Template.EquipSound = "StrategyUI_Grenade_Equip";
	Template.AddAbilityIconOverride('ThrowGrenade', "img:///UILibrary_PerkIcons.UIPerk_grenade_flash");
	Template.iRange = default.TRAUMA_GRENADE_RANGE;
	Template.iRadius = default.TRAUMA_GRENADE_RADIUS;
	Template.BaseDamage = default.TRAUMA_GRENADE_BASEDAMAGE;
	Template.iEnvironmentDamage = default.TRAUMA_GRENADE_ENVIRONMENTDAMAGE;
	Template.iClipSize = default.TRAUMA_GRENADE_CLIPSIZE;
	Template.iSoundRange = default.TRAUMA_GRENADE_SOUNDRANGE;

	Template.bFriendlyFire = false;
	Template.bFriendlyFireWarning = false;
	Template.Abilities.AddItem('ThrowGrenade');

	//We need to have an ApplyWeaponDamage for visualization, even if the grenade does 0 damage (makes the unit flinch, shows overwatch removal)
	WeaponDamageEffect = new class'X2Effect_ApplyWeaponDamage';
	WeaponDamageEffect.bExplosiveDamage = true;
	Template.ThrownGrenadeEffects.AddItem(WeaponDamageEffect);

	KnockbackEffect = new class'X2Effect_Knockback';
	KnockbackEffect.KnockbackDistance = 2;
	KnockbackEffect.OnlyOnDeath = false;
	Template.ThrownGrenadeEffects.AddItem(KnockbackEffect);

	DazeEffect = class'X2StatusEffects_XPack'.static.CreateDazedStatusEffect(default.TRAUMA_GRENADE_DAZE_TURNS, 100);
	DazeEffect.bRemoveWhenSourceDies = true;
	Template.ThrownGrenadeEffects.AddItem(DazeEffect);

	Template.LaunchedGrenadeEffects = Template.ThrownGrenadeEffects;

//BEGIN AUTOGENERATED CODE: Template Overrides 'HunterConcussionGrenade'
	Template.GameArchetype = "WP_Concussion_Grenade.WP_Concussion_Grenade";
//END AUTOGENERATED CODE: Template Overrides 'HunterConcussionGrenade'

	Template.CanBeBuilt = false;

	return Template;
}